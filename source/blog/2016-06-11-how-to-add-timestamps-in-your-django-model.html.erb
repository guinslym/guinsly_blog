---
title: How to add Timestamps in your Django model
date: 2016-06-11 20:43 UTC
tags: django, django-models
layout: 2015/blog2015
published: true
description: "Django- Add timestamps to an existing table"
---

django-extensions
from models_utils import TimestampsModel

  <link href="//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css" rel="stylesheet">
<style type="text/css">
	pre{
		margin: 18px 0;
	}
    p{
        margin: 18px 0;
    }
    .article_title{
        color:#B61924;text-transform: capitalize;
        padding: 20px 0 40px 0;
    }
    p.prerequis{
        font-weight: bolder;
    }
    ul.references li{
      list-style: circle !important;
    }
    thead tr td{
      font-weight: bolder;
    }
</style>
<script src="https://google-code-prettify.googlecode.com/svn/loader/run_prettify.js?lang=css&skin=desert"></script>

<div class="container article_index">

<div class="row">
  <div class="col-lg-9 col-lg-offset-1">
    <div class="row text-center">
    <h1 class="article_title" style="  ">How to add Timestamps in your Django model</h1>
    </div>

    <div class="post-desc">
      <p>You you create a Model in Django it comes automatically with a field called <strong>id</strong> but if you want to add <strong>timestamps</strong> you will need to add it manually.</p>

      <p>First let's create a new project and a new app.</p>
<div class="row ">

<pre class="prettyprint">
 -> %  django-admin startproject blogproject && cd blogproject
 -> %  python manage.py startapp blog
</pre>

</div>
    <h3>One model</h3>
    <p>let's add the new app <strong>blog</strong> to our <em>installed app</em></p>
    <p>Now we can start creating our model. We will have four fields: <strong>title</strong> <strong>description</strong> <strong>updated_at</strong> <strong>created_at</strong></p>

    <h3>Being smarter</h3>
    <p>If you planned to use these fields often in other Models. i.e. <strong>Comments</strong> <strong>Like</strong> <strong>ShoppingCart</strong> etc. It would be smarter keep thing DRY </p>

    <p>Do not put ... before models.Model otherwise your fields wil have will have this order.</p>
    <h3>Being smarter (suite)</h3>
    <p>You could simply use a Django package to do the job. Isntalled the package<a href="#">django_extension</a> and insert it in your project.</p>

    <p>After import it in your models.py</p>


<style type="text/css">
	   .media
    {
        /*box-shadow:0px 0px 4px -2px #000;*/
        margin: 20px 0;
        padding:30px;
    }
    .dp
    {
        border:10px solid #eee;
        transition: all 0.2s ease-in-out;
    }
    .dp:hover
    {
        border:2px solid #eee;
        transform:rotate(360deg);
        -ms-transform:rotate(360deg);
        -webkit-transform:rotate(360deg);
        /*-webkit-font-smoothing:antialiased;*/
    }
</style>
<div class="row">


    <div class="col-lg-6 col-lg-offset-1">
        <div class="media">
            <a class="pull-left" href="#">
                <img class="media-object dp img-circle" src="https://s3.amazonaws.com/uifaces/faces/twitter/guinslym/128.jpg" style="width: 100px;height:100px;">
            </a>
            <div class="media-body">
                <h4 class="media-heading">Guinsly Mond√©sir <small> Ottawa </i></small></h4>
                <h5>Web developer - Pythonist - Rubyist</h5>
                <a href="https://twitter.com/guinslym"><i class="fa fa-twitter fa-2x"></i></a>
                <a href="https://github.com/guinslym"><i class="fa fa-github fa-2x"></i></a>
                <hr style="margin:8px auto">

                <span class="label label-default">doi</span>
                <span class="label label-default">cli</span>
                <span class="label label-info">curl</span>
                <span class="label label-default">HTTP</span>
            </div>
        </div>

    </div>

</div>

   <footer>
  <div class="row text-center">

  <h1>Au revoir!!!</h1>
  <h4><a href="/" class="blog">-- retour au blog --</a></h4>
  </div>
</footer>

<script type="text/javascript">
  $('a').each(function() {
   var a = new RegExp('/' + window.location.host + '/');
   if (!a.test(this.href)) {
      $(this).attr("target","_blank");
   }
});
</script>
